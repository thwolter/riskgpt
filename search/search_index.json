{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RiskGPT","text":"<p>RiskGPT provides utilities for analyzing project risks and opportunities using LLM-based chains. The package leverages LangChain and LangGraph to create sophisticated workflows for risk assessment, analysis, and mitigation planning.</p> <p> </p>"},{"location":"#installation","title":"Installation","text":"<p>Install the latest release from PyPI:</p> <pre><code>pip install riskgpt\n</code></pre> <p>You can also install directly from GitHub:</p> <pre><code>pip install git+https://github.com/thwolter/riskgpt.git\n</code></pre>"},{"location":"#features","title":"Features","text":"<ul> <li>Risk and opportunity identification and analysis</li> <li>Cost-benefit analysis for risk mitigation strategies</li> <li>External context enrichment through web search</li> <li>Circuit breaker pattern for resilient external API calls</li> <li>Conversation memory with multiple backend options</li> <li>Programmatic API for direct access to search and document services</li> </ul>"},{"location":"#chains","title":"Chains","text":"<ul> <li>Risk Categories \u2013 determine relevant risk categories for a project description</li> <li>Check Definition \u2013 validate risk definitions</li> <li>Risk Drivers \u2013 identify underlying causes of risks</li> <li>Risk Assessment \u2013 estimate impact and probability of a risk</li> <li>Risk Mitigations \u2013 develop strategies to address risks</li> <li>Risk Indicators \u2013 derive indicators for ongoing monitoring</li> <li>Opportunities \u2013 detect positive developments</li> <li>Risk Identification \u2013 identify risks for a specific category</li> <li>Prioritize Risks \u2013 rank risks by urgency or impact</li> <li>Cost Benefit \u2013 estimate effort versus benefit of mitigations</li> <li>Communicate Risks \u2013 create stakeholder summaries</li> </ul>"},{"location":"#workflows","title":"Workflows","text":"<ul> <li>Risk Workflow \u2013 orchestrate risk identification and assessment with document integration</li> <li>Prepare Presentation Output \u2013 combine chains for slides</li> <li>External Context Enrichment \u2013 summarize recent external information</li> <li>Check Context Quality \u2013 validate project background</li> <li>Publishing \u2013 publish risk assessment results</li> </ul>"},{"location":"#logging","title":"Logging","text":"<p>Use <code>riskgpt.configure_logging()</code> to enable basic logging. Token usage is logged at the INFO level whenever a chain is executed.</p>"},{"location":"#input-validation","title":"Input Validation","text":"<p>The module <code>riskgpt.processors.input_validator</code> provides convenience functions for validating dictionaries against the request models. These helpers raise a <code>ValueError</code> if the input does not conform to the schema.</p> <ul> <li><code>validate_category_request</code></li> <li><code>validate_risk_request</code></li> <li><code>validate_assessment_request</code></li> <li><code>validate_mitigation_request</code></li> </ul>"},{"location":"#configuration","title":"Configuration","text":"<p>RiskGPT loads configuration from environment variables using a <code>.env</code> file at the project root or the regular environment.</p> <p>Available environment variables:</p> Variable Default Description <code>OPENAI_API_KEY</code> \u2013 API key for the OpenAI service. Required to use the real model; otherwise a dummy model is used. <code>OPENAI_MODEL_NAME</code> <code>openai:gpt-4.1-nano</code> Name of the OpenAI chat model. <code>TEMPERATURE</code> <code>0.7</code> Temperature parameter for the model's response. Higher values make the output more random. <code>MAX_TOKENS</code> \u2013 Maximum number of tokens in the model's response. This value might be adjusted depending on the model being used. <code>MEMORY_TYPE</code> <code>buffer</code> Conversation memory backend. Choose <code>none</code>, <code>buffer</code> or <code>redis</code>. <code>REDIS_URL</code> \u2013 Redis connection string. Needed when <code>MEMORY_TYPE</code> is set to <code>redis</code>. <code>DEFAULT_PROMPT_VERSION</code> <code>v1</code> Version identifier for prompts under <code>riskgpt/prompts</code>. <code>SEARCH_PROVIDER</code> <code>duckduckgo</code> Search provider for external context enrichment. Choose <code>duckduckgo</code>, <code>google</code>, <code>wikipedia</code>, or <code>tavily</code>. <code>MAX_SEARCH_RESULTS</code> <code>3</code> Maximum number of search results to return. <code>INCLUDE_WIKIPEDIA</code> <code>False</code> Whether to include Wikipedia results in addition to the primary search provider. <code>GOOGLE_CSE_ID</code> \u2013 Google Custom Search Engine ID. Required when <code>SEARCH_PROVIDER</code> is set to <code>google</code>. <code>GOOGLE_API_KEY</code> \u2013 Google API key. Required when <code>SEARCH_PROVIDER</code> is set to <code>google</code>. <code>TAVILY_API_KEY</code> \u2013 Tavily API key. Required when <code>SEARCH_PROVIDER</code> is set to <code>tavily</code>. <code>DOCUMENT_SERVICE_URL</code> \u2013 Base URL of the document microservice used to retrieve relevant documents in the risk workflow."},{"location":"check_context_quality/","title":"Check Context Quality","text":"<p>The <code>check_context_quality</code> workflow evaluates whether the provided context information is detailed enough for subsequent risk, opportunity and impact analysis.</p>"},{"location":"check_context_quality/#input","title":"Input","text":"<p><code>ContextQualityRequest</code> - <code>context_knowledge</code> (<code>str</code>): text description of the project context. - <code>project_type</code> (<code>str</code>, optional): domain or project type for tailored feedback. - <code>language</code> (<code>str</code>, optional, default <code>\"en\"</code>): language for the response.</p>"},{"location":"check_context_quality/#output","title":"Output","text":"<p><code>ContextQualityResponse</code> - <code>shortcomings</code> (<code>List[str]</code>): bullet list of missing or weak aspects. - <code>rationale</code> (<code>str</code>): short explanation with at least one Harvard style citation. - <code>suggested_improvements</code> (<code>str</code>): revised context text. - <code>response_info</code> (<code>ResponseInfo | None</code>): token and cost meta information.</p>"},{"location":"check_context_quality/#example","title":"Example","text":"<pre><code>from riskgpt import check_context_quality\nfrom riskgpt.models.workflows.context_quality import ContextQualityRequest\n\nreq = ContextQualityRequest(\n    context_knowledge=\"\"\"\n    ACME Corp plans to update our CRM system from the current legacy platform to a cloud-based solution. \n    The project will affect our sales and customer service departments. \n    We have approximately 500 users who will need to be migrated to the new system.\n    \"\"\",\n    project_type=\"IT Infrastructure\",\n    language=\"en\"\n)\n\nresp = check_context_quality(req)\n\nprint(\"Context Quality Assessment:\")\nprint(\"\\nShortcomings:\")\nfor i, shortcoming in enumerate(resp.shortcomings, 1):\n    print(f\"{i}. {shortcoming}\")\n\nprint(\"\\nRationale:\")\nprint(resp.rationale)\n\nprint(\"\\nSuggested Improvements:\")\nprint(resp.suggested_improvements)\n</code></pre>"},{"location":"check_definition/","title":"Check Definition","text":"<p>The <code>check_definition</code> chain validates and revises a risk description so that it follows the event\u2013cause\u2013consequence logic.</p>"},{"location":"check_definition/#input","title":"Input","text":"<p><code>DefinitionCheckRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risk_description</code> (<code>str</code>): risk definition provided by the user.</p>"},{"location":"check_definition/#output","title":"Output","text":"<p><code>DefinitionCheckResponse</code> - <code>revised_description</code> (<code>str</code>): risk definition rewritten in the proper format. - <code>rationale</code> (<code>str | None</code>): explanation of the changes. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"check_definition/#example","title":"Example","text":"<pre><code>from riskgpt import check_definition_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import DefinitionCheckRequest\n\nrequest = DefinitionCheckRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-MFG-2023\",\n        project_name=\"ACME Manufacturing Plant Upgrade\",\n        project_description=\"Modernization of production line equipment and control systems\",\n        language=\"de\",\n    ),\n    risk_description=\"Systemausfall durch mangelnde Wartung kann zu Produktionsstopps f\u00fchren.\",\n)\n\nresponse = check_definition_chain(request)\nprint(f\"Original: {request.risk_description}\")\nprint(f\"Revised: {response.revised_description}\")\nprint(f\"Rationale: {response.rationale}\")\n</code></pre>"},{"location":"communicate_risks/","title":"Communicate Risks","text":"<p>The <code>communicate_risks</code> chain generates concise summaries or slide text for stakeholders.</p>"},{"location":"communicate_risks/#input","title":"Input","text":"<p><code>CommunicationRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>summary</code> (<code>str</code>): text to summarise.</p>"},{"location":"communicate_risks/#output","title":"Output","text":"<p><code>CommunicationResponse</code> - <code>report</code> (<code>str</code>): generated communication text. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"communicate_risks/#example","title":"Example","text":"<pre><code>from riskgpt import communicate_risks_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import CommunicationRequest\n\nrequest = CommunicationRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-CRM-2023\",\n        project_name=\"ACME Corp CRM Implementation\",\n        project_description=\"An IT project to introduce a new CRM system across all customer-facing departments\",\n        audience=\"executive\",\n        language=\"de\",\n    ),\n    summary=\"\"\"\n    Die Implementierung des neuen CRM-Systems birgt mehrere Risiken:\n    1. Datenverlust w\u00e4hrend der Migration k\u00f6nnte zu Kundenbeziehungsproblemen f\u00fchren\n    2. Systemintegrationsprobleme mit bestehenden ERP-Systemen k\u00f6nnten Verz\u00f6gerungen verursachen\n    3. Mangelnde Benutzerakzeptanz k\u00f6nnte die Effektivit\u00e4t des Systems beeintr\u00e4chtigen\n    4. Budget\u00fcberschreitungen durch unvorhergesehene technische Herausforderungen sind m\u00f6glich\n    \"\"\"\n)\n\nresponse = communicate_risks_chain(request)\nprint(\"Executive Summary:\")\nprint(response.report)\n</code></pre>"},{"location":"cost_benefit/","title":"Cost Benefit","text":"<p>The <code>cost_benefit</code> chain estimates the effort or cost of mitigations relative to their expected benefit.</p>"},{"location":"cost_benefit/#input","title":"Input","text":"<p><code>CostBenefitRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risk_description</code> (<code>str</code>): description of the risk. - <code>mitigations</code> (<code>List[str]</code>): proposed mitigation measures.</p>"},{"location":"cost_benefit/#output","title":"Output","text":"<p><code>CostBenefitResponse</code> - <code>analyses</code> (<code>List[CostBenefit]</code>): estimated cost and benefit for each mitigation. - <code>references</code> (<code>List[str] | None</code>): supporting references. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"cost_benefit/#example","title":"Example","text":"<pre><code>from riskgpt import cost_benefit_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import CostBenefitRequest\n\nrequest = CostBenefitRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-MFG-2023\",\n        project_name=\"ACME Manufacturing Plant Upgrade\",\n        project_description=\"Modernization of production line equipment and control systems\",\n        language=\"de\",\n    ),\n    risk_description=\"Systemausfall durch mangelnde Wartung kann zu Produktionsstopps f\u00fchren und erhebliche finanzielle Verluste verursachen.\",\n    mitigations=[\n        \"Implementierung eines pr\u00e4ventiven Wartungsplans mit regelm\u00e4\u00dfigen Inspektionen\",\n        \"Installation eines redundanten Backup-Systems f\u00fcr kritische Komponenten\",\n        \"Schulung des Personals zur Fr\u00fcherkennung von Systemausf\u00e4llen\",\n        \"Einrichtung eines Notfallplans f\u00fcr schnelle Wiederherstellung im Falle eines Ausfalls\"\n    ],\n)\n\nresponse = cost_benefit_chain(request)\nprint(\"Cost-Benefit Analysis:\")\nfor i, analysis in enumerate(response.analyses, 1):\n    print(f\"{i}. Mitigation: {analysis.mitigation}\")\n    print(f\"   Cost: {analysis.cost}\")\n    print(f\"   Benefit: {analysis.benefit}\")\n    print(f\"   Ratio: {analysis.ratio}\")\n</code></pre>"},{"location":"external_context_enrichment/","title":"External Context Enrichment","text":"<p>The <code>external_context_enrichment</code> workflow collects recent external information about a project or sector and provides a short summary for workshop preparation.</p> <p>Note: The workflow relies on live searches using the configured search provider (DuckDuckGo, Google Custom Search API, or Wikipedia). If network access is restricted or the required API keys are missing, the search steps will fail and the response may be empty.</p>"},{"location":"external_context_enrichment/#configuration","title":"Configuration","text":"<p>The search provider can be configured using environment variables:</p> <ul> <li><code>SEARCH_PROVIDER</code>: The search provider to use. Options are <code>duckduckgo</code> (default), <code>google</code>, or <code>wikipedia</code>.</li> <li><code>INCLUDE_WIKIPEDIA</code>: Whether to include Wikipedia results in addition to the primary search provider. Set to <code>true</code> or <code>false</code> (default).</li> <li><code>GOOGLE_CSE_ID</code>: Google Custom Search Engine ID. Required when <code>SEARCH_PROVIDER</code> is set to <code>google</code>.</li> <li><code>GOOGLE_API_KEY</code>: Google API key. Required when <code>SEARCH_PROVIDER</code> is set to <code>google</code>.</li> </ul>"},{"location":"external_context_enrichment/#input","title":"Input","text":"<p><code>ExternalContextRequest</code> - <code>project_name</code> (<code>str</code>): name of the project or company. - <code>business_context</code> (<code>str</code>): brief description of the sector or business field. - <code>focus_keywords</code> (<code>List[str]</code>, optional): keywords to refine the search. - <code>time_horizon_months</code> (<code>int</code>, optional, default <code>12</code>): restrict search to the last months. - <code>language</code> (<code>str</code>, optional, default <code>\"en\"</code>): language for the response.</p>"},{"location":"external_context_enrichment/#output","title":"Output","text":"<p><code>ExternalContextResponse</code> - <code>sector_summary</code> (<code>str</code>): short overview of relevant developments. - <code>external_risks</code> (<code>List[str]</code>): bullet point risks or drivers. - <code>source_table</code> (<code>List[Dict[str, str]]</code>): table of sources with <code>title</code>, <code>url</code>, <code>date</code>, <code>type</code>, and <code>comment</code>. - <code>workshop_recommendations</code> (<code>List[str]</code>): suggestions for the workshop. - <code>full_report</code> (<code>str | None</code>): optional long-form text. - <code>response_info</code> (<code>ResponseInfo | None</code>): token and cost meta information.</p>"},{"location":"external_context_enrichment/#example","title":"Example","text":"<pre><code>from riskgpt import external_context_enrichment\nfrom riskgpt.models.workflows.external_context import ExternalContextRequest\n\nreq = ExternalContextRequest(\n    project_name=\"ACME Telecommunications\",\n    business_context=\"Fiber optic infrastructure deployment for high-speed internet in rural areas\",\n    focus_keywords=[\"cybersecurity\", \"supply chain disruptions\", \"regulatory changes\"],\n    time_horizon_months=6,\n    language=\"en\"\n)\n\nresult = external_context_enrichment(req)\nprint(\"Sector Summary:\")\nprint(result.sector_summary)\nprint(\"\\nExternal Risks:\")\nfor i, risk in enumerate(result.external_risks, 1):\n    print(f\"{i}. {risk}\")\nprint(\"\\nWorkshop Recommendations:\")\nfor i, rec in enumerate(result.workshop_recommendations, 1):\n    print(f\"{i}. {rec}\")\n</code></pre>"},{"location":"opportunities/","title":"Opportunities","text":"<p>The <code>opportunities_chain</code> identifies potential positive developments based on known risks.</p>"},{"location":"opportunities/#input","title":"Input","text":"<p><code>OpportunityRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risks</code> (<code>List[str]</code>): list of risks to analyze for opportunities.</p>"},{"location":"opportunities/#output","title":"Output","text":"<p><code>OpportunityResponse</code> - <code>opportunities</code> (<code>List[str]</code>): identified opportunities. - <code>references</code> (<code>List[str] | None</code>): supporting references. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"opportunities/#example","title":"Example","text":"<pre><code>from riskgpt import opportunities_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import OpportunityRequest\n\nrequest = OpportunityRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-CYB-2023\",\n        project_name=\"ACME Corp Cybersecurity Upgrade\",\n        project_description=\"Implementation of enhanced cybersecurity measures across all departments\",\n        language=\"de\",\n    ),\n    risks=[\n        \"Systemausfall w\u00e4hrend der Implementierung\",\n        \"Verz\u00f6gerung bei der Schulung der Mitarbeiter\",\n        \"Inkompatibilit\u00e4t mit bestehenden Systemen\"\n    ],\n)\n\nresponse = opportunities_chain(request)\nprint(response.opportunities)\n</code></pre>"},{"location":"prepare_presentation_output/","title":"Prepare Presentation Output","text":"<p>The <code>prepare_presentation_output</code> workflow creates presentation-ready summaries tailored to different audiences, combining risk identification, assessment, drivers, mitigations, and correlation analysis into a comprehensive output.</p>"},{"location":"prepare_presentation_output/#overview","title":"Overview","text":"<p>The Prepare Presentation Output workflow combines multiple steps into a single workflow:</p> <ol> <li>Risk identification for the specified focus area</li> <li>Risk assessment for each identified risk</li> <li>Driver identification for each risk</li> <li>Mitigation suggestions for each risk</li> <li>Correlation tag generation across all risks</li> <li>Summary generation with audience-specific formatting</li> </ol> <p>This workflow is designed to create presentation-ready outputs for different audiences, including executives, workshop participants, risk teams, auditors, regulators, project owners, investors, and operations teams.</p>"},{"location":"prepare_presentation_output/#usage","title":"Usage","text":"<pre><code>from riskgpt import prepare_presentation_output\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.workflows.presentation import PresentationRequest, AudienceEnum\n\n# Create a request\nrequest = PresentationRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-CRM-2023\",\n        project_name=\"ACME Corp CRM Implementation\",\n        project_description=\"Implementation of a new cloud-based CRM system to replace legacy software across all customer-facing departments\",\n        domain_knowledge=\"The company operates in the B2B manufacturing sector with approximately 500 users who will need to be migrated to the new system. The project has a timeline of 12 months and a budget of $1.2 million.\",\n        language=\"en\"\n    ),\n    audience=AudienceEnum.executive,\n    focus_areas=[\"Technical\", \"Operational\"],\n)\n\n# Run the workflow\nresponse = prepare_presentation_output(request)\n\n# Access the results\nprint(f\"Executive Summary: {response.executive_summary}\")\nprint(\"\\nMain Risks:\")\nfor risk in response.main_risks:\n    print(f\"- {risk}\")\n\nprint(f\"\\nQuantitative Summary: {response.quantitative_summary}\")\n\nprint(\"\\nKey Drivers:\")\nfor driver in response.key_drivers:\n    print(f\"- {driver}\")\n\nprint(\"\\nCorrelation Tags:\")\nfor tag in response.correlation_tags:\n    print(f\"- {tag}\")\n\nprint(\"\\nMitigations:\")\nfor mitigation in response.mitigations:\n    print(f\"- {mitigation}\")\n\nif response.open_questions:\n    print(\"\\nOpen Questions:\")\n    for question in response.open_questions:\n        print(f\"- {question}\")\n\nif response.chart_placeholders:\n    print(\"\\nChart Placeholders:\")\n    for chart in response.chart_placeholders:\n        print(f\"- {chart}\")\n\nif response.appendix:\n    print(f\"\\nAppendix: {response.appendix}\")\n</code></pre>"},{"location":"prepare_presentation_output/#audience-customization","title":"Audience Customization","text":"<p>The workflow automatically adjusts the output based on the target audience:</p> <ul> <li>Executive: Limits to top 3 risks, includes executive overview chart, removes open questions</li> <li>Workshop: Includes open questions for discussion</li> <li>Risk Internal: Adds model parameters to appendix</li> <li>Audit: Adds audit trail to appendix</li> <li>Regulator: Adds compliance mapping to appendix</li> <li>Project Owner: Adds project milestones to appendix</li> <li>Investor: Adds financial impact to appendix</li> <li>Operations: Adds KRI dashboard to appendix</li> </ul> <pre><code># For executive audience\nexecutive_request = PresentationRequest(\n    business_context=business_context,\n    audience=AudienceEnum.executive,\n    focus_areas=[\"Technical\"],\n)\nexecutive_response = prepare_presentation_output(executive_request)\n\n# For workshop audience\nworkshop_request = PresentationRequest(\n    business_context=business_context,\n    audience=AudienceEnum.workshop,\n    focus_areas=[\"Technical\"],\n)\nworkshop_response = prepare_presentation_output(workshop_request)\n</code></pre>"},{"location":"prepare_presentation_output/#input-schema","title":"Input Schema","text":"<p><code>PresentationRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): Business context information - <code>audience</code> (<code>AudienceEnum</code>): Target audience for the presentation - <code>focus_areas</code> (<code>List[str]</code>, optional): Specific areas to focus on</p>"},{"location":"prepare_presentation_output/#output-schema","title":"Output Schema","text":"<p><code>PresentationResponse</code> - <code>executive_summary</code> (<code>str</code>): High-level summary for executives - <code>main_risks</code> (<code>List[str]</code>): List of main risks identified - <code>quantitative_summary</code> (<code>str</code>, optional): Quantitative assessment summary - <code>key_drivers</code> (<code>List[str]</code>, optional): List of key risk drivers - <code>correlation_tags</code> (<code>List[str]</code>, optional): Tags for correlation analysis - <code>mitigations</code> (<code>List[str]</code>, optional): List of mitigation measures - <code>open_questions</code> (<code>List[str]</code>, optional): Questions for discussion - <code>chart_placeholders</code> (<code>List[str]</code>, optional): Placeholders for charts - <code>appendix</code> (<code>str</code>, optional): Additional information - <code>response_info</code> (<code>ResponseInfo</code>, optional): Token and cost meta information</p>"},{"location":"prioritize_risks/","title":"Prioritize Risks","text":"<p>The <code>prioritize_risks</code> chain ranks identified risks by urgency or expected impact.</p>"},{"location":"prioritize_risks/#input","title":"Input","text":"<p><code>PrioritizationRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risks</code> (<code>List[str]</code>): risk descriptions to rank.</p>"},{"location":"prioritize_risks/#output","title":"Output","text":"<p><code>PrioritizationResponse</code> - <code>prioritized_risks</code> (<code>List[str]</code>): risks ordered by priority. - <code>rationale</code> (<code>str | None</code>): explanation of the ranking. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"prioritize_risks/#example","title":"Example","text":"<pre><code>from riskgpt import prioritize_risks_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import PrioritizationRequest\n\nrequest = PrioritizationRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-CRM-2023\",\n        project_name=\"ACME Corp CRM Implementation\",\n        project_description=\"An IT project to introduce a new CRM system across all customer-facing departments\",\n        language=\"de\",\n    ),\n    risks=[\n        \"Datenverlust w\u00e4hrend der Migration k\u00f6nnte zu Kundenbeziehungsproblemen f\u00fchren\",\n        \"Systemintegrationsprobleme mit bestehenden ERP-Systemen k\u00f6nnten Verz\u00f6gerungen verursachen\",\n        \"Mangelnde Benutzerakzeptanz k\u00f6nnte die Effektivit\u00e4t des Systems beeintr\u00e4chtigen\",\n        \"Budget\u00fcberschreitungen durch unvorhergesehene technische Herausforderungen sind m\u00f6glich\",\n        \"Datenschutzprobleme k\u00f6nnten zu rechtlichen Konsequenzen f\u00fchren\"\n    ],\n)\n\nresponse = prioritize_risks_chain(request)\nprint(\"Prioritized Risks:\")\nfor i, risk in enumerate(response.prioritized_risks, 1):\n    print(f\"{i}. {risk}\")\nprint(f\"\\nRationale: {response.rationale}\")\n</code></pre>"},{"location":"publishing/","title":"Publishing to PyPI","text":"<p>This project is configured to automatically publish new versions to PyPI when changes are made to the main package code in the <code>main</code> branch.</p>"},{"location":"publishing/#workflow-overview","title":"Workflow Overview","text":"<p>The GitHub Actions workflow in <code>.github/workflows/publish-pypi.yml</code> handles the following steps:</p> <ol> <li>Triggers when changes are pushed to the <code>main</code> branch that affect files in the <code>riskgpt/</code> directory</li> <li>Automatically increments the patch version number in <code>pyproject.toml</code></li> <li>Builds the package using Poetry</li> <li>Publishes the package to PyPI</li> <li>Commits the updated version number back to the repository</li> </ol>"},{"location":"publishing/#required-setup","title":"Required Setup","text":"<p>To enable automatic publishing to PyPI, you need to set up the following GitHub secret:</p>"},{"location":"publishing/#pypi_api_token","title":"PYPI_API_TOKEN","text":"<ol> <li>Create an API token on PyPI:</li> <li>Log in to your PyPI account at https://pypi.org/</li> <li>Go to Account Settings \u2192 API tokens</li> <li>Create a new API token with the scope limited to the <code>riskgpt</code> project</li> <li> <p>Copy the token value (you won't be able to see it again)</p> </li> <li> <p>Add the token as a GitHub repository secret:</p> </li> <li>Go to your GitHub repository</li> <li>Navigate to Settings \u2192 Secrets and variables \u2192 Actions</li> <li>Click \"New repository secret\"</li> <li>Name: <code>PYPI_API_TOKEN</code></li> <li>Value: Paste the PyPI API token you copied</li> <li>Click \"Add secret\"</li> </ol>"},{"location":"publishing/#manual-version-control","title":"Manual Version Control","text":"<p>If you need to manually control the version number (for major or minor version bumps), you can:</p> <ol> <li>Update the version in <code>pyproject.toml</code> directly</li> <li>Push the change to the <code>main</code> branch</li> <li>The workflow will still publish to PyPI but won't increment the version further</li> </ol>"},{"location":"publishing/#troubleshooting","title":"Troubleshooting","text":"<p>If the workflow fails to publish, check:</p> <ol> <li>The PyPI API token is correctly set up as a repository secret</li> <li>The package version in <code>pyproject.toml</code> is higher than the latest version on PyPI</li> <li>The GitHub Actions logs for specific error messages</li> </ol>"},{"location":"risk_assessment/","title":"Risk Assessment","text":"<p>The <code>risk_assessment_chain</code> evaluates the potential impact of a risk. It either returns a three-point estimate with a probability distribution or, for single-event risks, an impact and probability.</p>"},{"location":"risk_assessment/#input","title":"Input","text":"<p><code>AssessmentRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risk_description</code> (<code>str</code>): description of the risk. - <code>document_refs</code> (<code>List[str]</code>, optional): document IDs from the microservice.</p>"},{"location":"risk_assessment/#output","title":"Output","text":"<p><code>AssessmentResponse</code> - <code>minimum</code> (<code>float | None</code>): lower bound of the impact estimate. - <code>most_likely</code> (<code>float | None</code>): most likely impact value. - <code>maximum</code> (<code>float | None</code>): upper bound of the impact estimate. - <code>distribution</code> (<code>str | None</code>): suggested probability distribution. - <code>impact</code> (<code>float | None</code>): impact value for single events. - <code>probability</code> (<code>float | None</code>): probability of occurrence for single events. - <code>evidence</code> (<code>str | None</code>): explanation of the assessment and supporting rationale. - <code>references</code> (<code>List[str] | None</code>): supporting references. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"risk_assessment/#example","title":"Example","text":"<pre><code>from riskgpt import risk_assessment_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import AssessmentRequest\n\nrequest = AssessmentRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-MFG-2023\",\n        project_name=\"ACME Manufacturing Plant Upgrade\",\n        project_description=\"Modernization of production line equipment and control systems\",\n        language=\"de\",\n    ),\n    risk_description=\"Systemausfall durch mangelnde Wartung kann zu Produktionsstopps f\u00fchren und erhebliche finanzielle Verluste verursachen.\",\n    document_refs=[\"doc-maintenance-history-2022\", \"doc-production-impact-analysis\"]\n)\n\nresponse = risk_assessment_chain(request)\nprint(f\"Impact range: {response.minimum} - {response.most_likely} - {response.maximum}\")\nprint(f\"Distribution: {response.distribution}\")\nprint(f\"Evidence: {response.evidence}\")\n</code></pre>"},{"location":"risk_categories/","title":"Risk Categories","text":"<p>The <code>risk_categories_chain</code> identifies relevant risk categories for a project description using a language model.</p>"},{"location":"risk_categories/#input","title":"Input","text":"<p><code>CategoryRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project description, language and other context. - <code>existing_categories</code> (<code>List[str]</code>, optional): predefined categories to extend.</p>"},{"location":"risk_categories/#output","title":"Output","text":"<p><code>CategoryResponse</code> - <code>categories</code> (<code>List[str]</code>): list of detected risk categories. - <code>rationale</code> (<code>str | None</code>): explanation of the categories. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"risk_categories/#example","title":"Example","text":"<pre><code>from riskgpt import risk_categories_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import CategoryRequest\n\nrequest = CategoryRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-CRM-2023\",\n        project_name=\"ACME Corp CRM Implementation\",\n        project_description=\"An IT project to introduce a new CRM system across all customer-facing departments to improve customer relationship management and sales tracking.\",\n        domain_knowledge=\"The company operates in the B2B market with a focus on manufacturing equipment for the automotive industry.\",\n        language=\"de\",\n    ),\n    existing_categories=[\"technical\", \"strategic\"],\n)\n\nresponse = risk_categories_chain(request)\nprint(response.categories)\n</code></pre>"},{"location":"risk_drivers/","title":"Risk Drivers","text":"<p>The <code>risk_drivers_chain</code> identifies key drivers that influence a specific risk. It uses the shared system prompt so that any cited evidence should only reference sources the model is confident actually exist.</p>"},{"location":"risk_drivers/#input","title":"Input","text":"<p><code>DriverRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risk_description</code> (<code>str</code>): description of the risk.</p>"},{"location":"risk_drivers/#output","title":"Output","text":"<p><code>DriverResponse</code> - <code>drivers</code> (<code>List[str]</code>): list of identified risk drivers. - <code>references</code> (<code>List[str] | None</code>): supporting references in Harvard style. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"risk_drivers/#example","title":"Example","text":"<pre><code>from riskgpt import risk_drivers_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import DriverRequest\n\nrequest = DriverRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-MFG-2023\",\n        project_name=\"ACME Manufacturing Plant Upgrade\",\n        project_description=\"Modernization of production line equipment and control systems\",\n        language=\"de\",\n    ),\n    risk_description=\"Systemausfall durch mangelnde Wartung kann zu Produktionsstopps f\u00fchren und erhebliche finanzielle Verluste verursachen.\",\n)\n\nresponse = risk_drivers_chain(request)\nprint(\"Risk Drivers:\")\nfor i, driver in enumerate(response.drivers, 1):\n    print(f\"{i}. {driver}\")\n</code></pre>"},{"location":"risk_identification/","title":"Risk Identification","text":"<p>The <code>risk_identification_chain</code> identifies specific risks for a given risk category.</p>"},{"location":"risk_identification/#input","title":"Input","text":"<p><code>RiskRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project description, language and other context. - <code>category</code> (<code>str</code>): the risk category to analyze. - <code>max_risks</code> (<code>int</code>, optional, default <code>5</code>): maximum number of risks to return. - <code>existing_risks</code> (<code>List[str]</code>, optional): already identified risks to exclude. - <code>document_refs</code> (<code>List[str]</code>, optional): document IDs from the microservice.</p>"},{"location":"risk_identification/#output","title":"Output","text":"<p><code>RiskResponse</code> - <code>risks</code> (<code>List[Risk]</code>): list of identified risks with title, description and category. - <code>references</code> (<code>List[str] | None</code>): list of references backing the risks. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"risk_identification/#example","title":"Example","text":"<pre><code>from riskgpt import risk_identification_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import RiskRequest\n\nrequest = RiskRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-CRM-2023\",\n        project_name=\"ACME Corp CRM Implementation\",\n        project_description=\"An IT project to introduce a new CRM system across all customer-facing departments to improve customer relationship management and sales tracking.\",\n        domain_knowledge=\"The company operates in the B2B market with a focus on manufacturing equipment for the automotive industry.\",\n        language=\"de\",\n    ),\n    category=\"Technical\",\n    max_risks=5,\n    existing_risks=[\"Datenverlust w\u00e4hrend der Migration\"],\n    document_refs=[\"doc-technical-requirements\", \"doc-system-architecture\"]\n)\n\nresponse = risk_identification_chain(request)\nprint(\"Identified Risks:\")\nfor i, risk in enumerate(response.risks, 1):\n    print(f\"{i}. {risk.title}: {risk.description}\")\n</code></pre>"},{"location":"risk_indicators/","title":"Risk Indicators","text":"<p>The <code>risk_indicators_chain</code> derives indicators for ongoing risk monitoring.</p>"},{"location":"risk_indicators/#input","title":"Input","text":"<p><code>MonitoringRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risk_description</code> (<code>str</code>): description of the risk.</p>"},{"location":"risk_indicators/#output","title":"Output","text":"<p><code>MonitoringResponse</code> - <code>indicators</code> (<code>List[str]</code>): monitoring metrics or warning signals. - <code>references</code> (<code>List[str] | None</code>): supporting references. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"risk_indicators/#example","title":"Example","text":"<pre><code>from riskgpt import risk_indicators_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import MonitoringRequest\n\nrequest = MonitoringRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-MFG-2023\",\n        project_name=\"ACME Manufacturing Plant Upgrade\",\n        project_description=\"Modernization of production line equipment and control systems\",\n        language=\"de\",\n    ),\n    risk_description=\"Systemausfall durch mangelnde Wartung kann zu Produktionsstopps f\u00fchren und erhebliche finanzielle Verluste verursachen.\",\n)\n\nresponse = risk_indicators_chain(request)\nprint(\"Monitoring Indicators:\")\nfor i, indicator in enumerate(response.indicators, 1):\n    print(f\"{i}. {indicator}\")\n</code></pre>"},{"location":"risk_mitigations/","title":"Risk Mitigations","text":"<p>The <code>risk_mitigations_chain</code> suggests mitigation measures for a risk based on its drivers. It also includes the system prompt so that references are only given when the model is reasonably sure of a real source.</p>"},{"location":"risk_mitigations/#input","title":"Input","text":"<p><code>MitigationRequest</code> - <code>business_context</code> (<code>BusinessContext</code>): project information and language. - <code>risk_description</code> (<code>str</code>): description of the risk. - <code>drivers</code> (<code>List[str]</code>, optional): identified drivers for this risk.</p>"},{"location":"risk_mitigations/#output","title":"Output","text":"<p><code>MitigationResponse</code> - <code>mitigations</code> (<code>List[str]</code>): proposed mitigation measures. - <code>references</code> (<code>List[str] | None</code>): supporting references. - <code>response_info</code> (<code>ResponseInfo | None</code>): meta-information including token usage.</p>"},{"location":"risk_mitigations/#example","title":"Example","text":"<pre><code>from riskgpt import risk_mitigations_chain\nfrom riskgpt.models.common import BusinessContext\nfrom riskgpt.models.chains import MitigationRequest\n\nrequest = MitigationRequest(\n    business_context=BusinessContext(\n        project_id=\"ACME-MFG-2023\",\n        project_name=\"ACME Manufacturing Plant Upgrade\",\n        project_description=\"Modernization of production line equipment and control systems\",\n        language=\"de\",\n    ),\n    risk_description=\"Systemausfall durch mangelnde Wartung kann zu Produktionsstopps f\u00fchren und erhebliche finanzielle Verluste verursachen.\",\n    drivers=[\n        \"Veraltete Hardware mit hoher Ausfallwahrscheinlichkeit\",\n        \"Unzureichende Wartungspl\u00e4ne und -prozesse\",\n        \"Mangel an qualifiziertem Wartungspersonal\",\n        \"Fehlende Ersatzteile f\u00fcr kritische Komponenten\"\n    ],\n)\n\nresponse = risk_mitigations_chain(request)\nprint(\"Mitigation Strategies:\")\nfor i, mitigation in enumerate(response.mitigations, 1):\n    print(f\"{i}. {mitigation}\")\n</code></pre>"},{"location":"risk_workflow/","title":"Risk Workflow","text":"<p>The Risk Workflow orchestrates the risk identification and assessment process, integrating with web search and document microservice for enhanced context.</p>"},{"location":"risk_workflow/#overview","title":"Overview","text":"<p>The Risk Workflow combines multiple steps into a single workflow:</p> <ol> <li>Web search for relevant context</li> <li>Document retrieval from the document microservice</li> <li>Risk identification (using direct implementation to avoid circular dependency)</li> <li>Risk assessment</li> </ol> <p>This workflow is designed to replace the individual chains with a more integrated approach that can leverage web search results and document references.</p>"},{"location":"risk_workflow/#usage","title":"Usage","text":"<pre><code>from src import BusinessContext, RiskRequest\nfrom src import risk_workflow\n\n# Create a request\nrequest = RiskRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n        # Optional document references\n        document_refs=[\"doc-uuid-001\", \"doc-uuid-002\"],\n    ),\n    category=\"Technical\",\n    max_risks=5,\n    existing_risks=[\"Data migration failure\"],\n)\n\n# Run the workflow\nresponse = risk_workflow(request)\n\n# Access the results\nfor risk in response.risks:\n    print(f\"Risk: {risk.title}\")\n    print(f\"Description: {risk.description}\")\n    print(f\"Category: {risk.category}\")\n    if risk.document_refs:\n        print(f\"Document References: {risk.document_refs}\")\n    print(\"---\")\n\n# Access document references in the response\nif response.document_refs:\n    print(f\"Document References: {response.document_refs}\")\n\n# Access search references in the response\nif response.references:\n    print(f\"Search References: {response.references}\")\n</code></pre>"},{"location":"risk_workflow/#asynchronous-usage","title":"Asynchronous Usage","text":"<pre><code>import asyncio\nfrom src import async_risk_workflow\n\n\nasync def main():\n    # Create a request (same as above)\n    # ...\n\n    # Run the workflow asynchronously\n    response = await async_risk_workflow(request)\n\n    # Access the results (same as above)\n    # ...\n\n\nasyncio.run(main())\n</code></pre>"},{"location":"risk_workflow/#web-search-integration","title":"Web Search Integration","text":"<p>The workflow includes integration with web search providers to find relevant context for risk identification. This uses the same search functionality as the external_context_enrichment workflow.</p> <pre><code># The search is performed automatically\n\nresponse = risk_workflow(request)\n\n# Access search references in the response\nif response.references:\n    print(f\"Search References: {response.references}\")\n</code></pre> <p>The search query is constructed from the business context and risk category, and the results are used to enhance the risk identification process.</p>"},{"location":"risk_workflow/#document-microservice-integration","title":"Document Microservice Integration","text":"<p>The workflow includes integration with a document microservice that provides relevant documents based on the business context. This integration is currently implemented as a placeholder that will be replaced with actual API calls in the future. Set the <code>DOCUMENT_SERVICE_URL</code> environment variable to the base URL of this microservice.</p> <pre><code>from src import fetch_documents\n\n# Fetch relevant documents for a business context\ndocument_refs = fetch_documents(business_context)\n</code></pre>"},{"location":"schemas_assessment/","title":"Assessment Schema Models","text":"<p>This page documents the schema models related to risk assessment in the RiskGPT application.</p>"},{"location":"schemas_assessment/#overview","title":"Overview","text":"<p>The assessment schema models define the structure for risk assessment requests and responses. They are used in the risk assessment workflow and related chains.</p>"},{"location":"schemas_assessment/#models","title":"Models","text":""},{"location":"schemas_assessment/#quantitativeassessment","title":"QuantitativeAssessment","text":"<pre><code>class QuantitativeAssessment(BaseModel):\n    minimum: Optional[float] = Field(\n        default=None, description=\"Minimum value of the risk assessment\"\n    )\n    most_likely: Optional[float] = Field(\n        default=None, description=\"Most likely value of the risk assessment\"\n    )\n    maximum: Optional[float] = Field(\n        default=None, description=\"Maximum value of the risk assessment\"\n    )\n    distribution: Optional[str] = Field(\n        default=None, description=\"Distribution type (e.g., normal, triangular)\"\n    )\n    distribution_fit: Optional[Dist] = Field(\n        default=None, description=\"Fitted distribution parameters\"\n    )\n</code></pre> <p>Nested model for quantitative risk assessment.</p> <p>Fields: - <code>minimum</code> (Optional[float]): Minimum value of the risk assessment - <code>most_likely</code> (Optional[float]): Most likely value of the risk assessment - <code>maximum</code> (Optional[float]): Maximum value of the risk assessment - <code>distribution</code> (Optional[str]): Distribution type (e.g., normal, triangular) - <code>distribution_fit</code> (Optional[Dist]): Fitted distribution parameters</p> <p>Example:</p> <pre><code>{\n    \"minimum\": 50000.0,\n    \"most_likely\": 100000.0,\n    \"maximum\": 200000.0,\n    \"distribution\": \"triangular\",\n    \"distribution_fit\": {\n        \"name\": \"triangular\",\n        \"parameters\": {\"min\": 50000.0, \"mode\": 100000.0, \"max\": 200000.0},\n    },\n}\n</code></pre>"},{"location":"schemas_assessment/#assessmentrequest","title":"AssessmentRequest","text":"<pre><code>class AssessmentRequest(BaseModel):\n    business_context: BusinessContext = Field(\n        description=\"Business context information\"\n    )\n    risk_description: str = Field(description=\"Risk description to assess\")\n    document_refs: Optional[List[str]] = Field(\n        default=None,\n        description=\"References to document UUIDs from the document microservice\",\n    )\n</code></pre> <p>Input model for assessing a risk's impact.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>risk_description</code> (str): Risk description to assess - <code>document_refs</code> (Optional[List[str]]): References to document UUIDs from the document microservice</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"risk_description\": \"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n}\n</code></pre>"},{"location":"schemas_assessment/#assessmentresponse","title":"AssessmentResponse","text":"<pre><code>class AssessmentResponse(BaseResponse):\n    quantitative: Optional[QuantitativeAssessment] = Field(\n        default=None, description=\"Quantitative assessment details\"\n    )\n    impact: Optional[float] = Field(\n        default=None, description=\"Impact score (0-1 or monetary value)\"\n    )\n    probability: Optional[float] = Field(\n        default=None, description=\"Probability score (0-1)\"\n    )\n    evidence: Optional[str] = Field(\n        default=None, description=\"Evidence supporting the assessment\"\n    )\n    references: Optional[List[str]] = Field(\n        default=None, description=\"References used for the assessment\"\n    )\n    document_refs: Optional[List[str]] = Field(\n        default=None,\n        description=\"References to document UUIDs from the document microservice\",\n    )\n</code></pre> <p>Output model for a risk impact assessment.</p> <p>Fields: - <code>quantitative</code> (Optional[QuantitativeAssessment]): Quantitative assessment details - <code>impact</code> (Optional[float]): Impact score (0-1 or monetary value) - <code>probability</code> (Optional[float]): Probability score (0-1) - <code>evidence</code> (Optional[str]): Evidence supporting the assessment - <code>references</code> (Optional[List[str]]): References used for the assessment - <code>document_refs</code> (Optional[List[str]]): References to document UUIDs from the document microservice - <code>model_version</code> (str): Schema version for backward compatibility (inherited from BaseResponse) - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing (inherited from BaseResponse)</p> <p>Example:</p> <pre><code>{\n    \"quantitative\": {\n        \"minimum\": 50000.0,\n        \"most_likely\": 100000.0,\n        \"maximum\": 200000.0,\n        \"distribution\": \"triangular\",\n    },\n    \"impact\": 0.7,\n    \"probability\": 0.3,\n    \"evidence\": \"Based on historical data from similar CRM implementations\",\n    \"references\": [\n        \"Industry report on CRM implementations\",\n        \"Internal lessons learned\",\n    ],\n    \"model_version\": \"1.0\",\n    \"response_info\": {\n        \"consumed_tokens\": 1400,\n        \"total_cost\": 0.028,\n        \"prompt_name\": \"risk_assessment\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_assessment/#usage","title":"Usage","text":"<p>These models are used in the risk assessment workflow and related chains to assess the impact and probability of identified risks.</p>"},{"location":"schemas_assessment/#risk-assessment","title":"Risk Assessment","text":"<pre><code>from src import BusinessContext, AssessmentRequest\nfrom src import get_assessment_chain\n\n# Create a request\nrequest = AssessmentRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    risk_description=\"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n)\n\n# Run the chain\nresponse = get_assessment_chain(request)\n\n# Access the results\nprint(f\"Impact: {response.impact}\")\nprint(f\"Probability: {response.probability}\")\nif response.evidence:\n    print(f\"Evidence: {response.evidence}\")\nif response.quantitative:\n    print(f\"Quantitative Assessment:\")\n    print(f\"  Minimum: {response.quantitative.minimum}\")\n    print(f\"  Most Likely: {response.quantitative.most_likely}\")\n    print(f\"  Maximum: {response.quantitative.maximum}\")\n    print(f\"  Distribution: {response.quantitative.distribution}\")\n</code></pre>"},{"location":"schemas_assessment/#assessment-in-risk-workflow","title":"Assessment in Risk Workflow","text":"<p>The assessment models are also used in the risk workflow:</p> <pre><code>from src import BusinessContext, RiskRequest\nfrom src import risk_workflow\n\n# Create a request\nrequest = RiskRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    category=\"Technical\",\n    max_risks=5,\n)\n\n# Run the workflow (includes assessment)\n\nresponse = risk_workflow(request)\n\n# The assessments are performed internally in the workflow\n# but are not directly accessible in the response\n# You would need to call get_assessment_chain separately for each risk\n</code></pre>"},{"location":"schemas_base/","title":"Base Schema Models","text":"<p>This page documents the base schema models used throughout the RiskGPT application.</p>"},{"location":"schemas_base/#overview","title":"Overview","text":"<p>The base schema models provide the foundation for all other models in the application. They define common structures and fields that are reused across different parts of the application.</p>"},{"location":"schemas_base/#models","title":"Models","text":""},{"location":"schemas_base/#prompt","title":"Prompt","text":"<pre><code>class Prompt(BaseModel):\n    version: str\n    description: str\n    template: str\n</code></pre> <p>A model representing a prompt template with version information and description.</p> <p>Fields: - <code>version</code> (str): Version of the prompt template - <code>description</code> (str): Description of what the prompt does - <code>template</code> (str): The actual prompt template text</p>"},{"location":"schemas_base/#languageenum","title":"LanguageEnum","text":"<pre><code>class LanguageEnum(str, Enum):\n    english = \"en\"\n    german = \"de\"\n    french = \"fr\"\n    spanish = \"es\"\n    italian = \"it\"\n    portuguese = \"pt\"\n    dutch = \"nl\"\n    swedish = \"sv\"\n    norwegian = \"no\"\n    danish = \"da\"\n    finnish = \"fi\"\n    polish = \"pl\"\n    russian = \"ru\"\n    japanese = \"ja\"\n    chinese = \"zh\"\n    korean = \"ko\"\n</code></pre> <p>An enumeration of supported languages for responses.</p>"},{"location":"schemas_base/#responseinfo","title":"ResponseInfo","text":"<pre><code>class ResponseInfo(BaseModel):\n    consumed_tokens: int\n    total_cost: float\n    prompt_name: str\n    model_name: str\n    error: Optional[str] = None\n</code></pre> <p>Information about the response processing, including token usage and cost.</p> <p>Fields: - <code>consumed_tokens</code> (int): Number of tokens consumed by the request - <code>total_cost</code> (float): Total cost of the request - <code>prompt_name</code> (str): Name of the prompt used - <code>model_name</code> (str): Name of the model used - <code>error</code> (Optional[str]): Error message, if any</p>"},{"location":"schemas_base/#baseresponse","title":"BaseResponse","text":"<pre><code>class BaseResponse(BaseModel):\n    model_version: str = Field(\n        default=\"1.0\", description=\"Schema version for backward compatibility\"\n    )\n    response_info: Optional[ResponseInfo] = Field(\n        default=None, description=\"Information about the response processing\"\n    )\n</code></pre> <p>Base class for all response models, providing common fields.</p> <p>Fields: - <code>model_version</code> (str): Schema version for backward compatibility - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p>"},{"location":"schemas_base/#businesscontext","title":"BusinessContext","text":"<pre><code>class BusinessContext(BaseModel):\n    model_version: str = Field(\n        default=\"1.0\", description=\"Schema version for backward compatibility\"\n    )\n    project_id: str = Field(\n        description=\"Unique identifier for the project\",\n        examples=[\"PRJ-2023-001\", \"CRM-ROLLOUT-Q1\"],\n    )\n    project_description: Optional[str] = Field(\n        default=None,\n        description=\"Detailed description of the project\",\n        examples=[\n            \"Implementation of a new CRM system\",\n            \"Migration to cloud infrastructure\",\n        ],\n    )\n    domain_knowledge: Optional[str] = Field(\n        default=None,\n        description=\"Specific domain knowledge relevant to the project\",\n        examples=[\n            \"The company operates in the B2B sector\",\n            \"Previous attempts at similar projects failed due to...\",\n        ],\n    )\n    business_area: Optional[str] = Field(\n        default=None,\n        description=\"Business area or department the project belongs to\",\n        examples=[\"Sales\", \"Marketing\", \"IT\", \"Finance\"],\n    )\n    industry_sector: Optional[str] = Field(\n        default=None,\n        description=\"Industry sector the project operates in\",\n        examples=[\"Healthcare\", \"Finance\", \"Manufacturing\", \"Retail\"],\n    )\n    language: Optional[LanguageEnum] = Field(\n        default=LanguageEnum.english, description=\"Language for the response\"\n    )\n    document_refs: Optional[List[str]] = Field(\n        default=None,\n        description=\"References to document UUIDs from the document microservice\",\n    )\n</code></pre> <p>Standardized schema for business context information.</p> <p>Fields: - <code>model_version</code> (str): Schema version for backward compatibility - <code>project_id</code> (str): Unique identifier for the project - <code>project_description</code> (Optional[str]): Detailed description of the project - <code>domain_knowledge</code> (Optional[str]): Specific domain knowledge relevant to the project - <code>business_area</code> (Optional[str]): Business area or department the project belongs to - <code>industry_sector</code> (Optional[str]): Industry sector the project operates in - <code>language</code> (Optional[LanguageEnum]): Language for the response - <code>document_refs</code> (Optional[List[str]]): References to document UUIDs from the document microservice</p> <p>Methods: - <code>get_domain_section()</code>: Return formatted domain knowledge section if available</p>"},{"location":"schemas_base/#dist","title":"Dist","text":"<pre><code>class Dist(BaseModel):\n    name: str = Field(description=\"Name of the distribution\")\n    parameters: Optional[Dict[str, float]] = Field(\n        default=None, description=\"Parameters of the distribution\"\n    )\n    source: Optional[str] = Field(\n        default=None, description=\"Source of the distribution\"\n    )\n    correlation_tag: Optional[str] = Field(\n        default=None, description=\"Tag for correlation analysis\"\n    )\n</code></pre> <p>Generic distribution model for statistical distributions.</p> <p>Fields: - <code>name</code> (str): Name of the distribution - <code>parameters</code> (Optional[Dict[str, float]]): Parameters of the distribution - <code>source</code> (Optional[str]): Source of the distribution - <code>correlation_tag</code> (Optional[str]): Tag for correlation analysis</p> <p>Example:</p> <pre><code>{\n    \"name\": \"normal\",\n    \"parameters\": {\"mean\": 100.0, \"std\": 10.0},\n    \"source\": \"historical data\",\n    \"correlation_tag\": \"market_volatility\"\n}\n</code></pre>"},{"location":"schemas_base/#usage","title":"Usage","text":"<p>These base models are used throughout the application as building blocks for more complex models. For example, the <code>BusinessContext</code> model is used in almost all request models to provide context for the request.</p> <pre><code>from src import BusinessContext\n\n# Create a business context\ncontext = BusinessContext(\n    project_id=\"PRJ-2023-001\",\n    project_description=\"Implementation of a new CRM system\",\n    domain_knowledge=\"The company operates in the B2B sector\",\n    business_area=\"IT\",\n    industry_sector=\"Finance\",\n    language=\"en\",\n)\n\n# Use the business context in a request\nfrom src import RiskRequest\n\nrequest = RiskRequest(\n    business_context=context,\n    category=\"Technical\",\n    max_risks=5,\n)\n</code></pre>"},{"location":"schemas_category/","title":"Category Schema Models","text":"<p>This page documents the schema models related to risk categories in the RiskGPT application.</p>"},{"location":"schemas_category/#overview","title":"Overview","text":"<p>The category schema models define the structure for risk category identification requests and responses. Risk categories help organize risks into logical groups for better management and analysis.</p>"},{"location":"schemas_category/#models","title":"Models","text":""},{"location":"schemas_category/#categoryrequest","title":"CategoryRequest","text":"<pre><code>class CategoryRequest(BaseModel):\n    business_context: BusinessContext = Field(\n        description=\"Business context information\"\n    )\n    existing_categories: Optional[List[str]] = Field(\n        default=None, description=\"List of existing categories to consider\"\n    )\n</code></pre> <p>Input model for category identification.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>existing_categories</code> (Optional[List[str]]): List of existing categories to consider</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"existing_categories\": [\"Technical\", \"Organizational\"],\n}\n</code></pre>"},{"location":"schemas_category/#categoryresponse","title":"CategoryResponse","text":"<pre><code>class CategoryResponse(BaseResponse):\n    categories: List[str] = Field(description=\"List of identified risk categories\")\n    rationale: Optional[str] = Field(\n        default=None, description=\"Explanation for the identified categories\"\n    )\n</code></pre> <p>Output model for identified categories.</p> <p>Fields: - <code>categories</code> (List[str]): List of identified risk categories - <code>rationale</code> (Optional[str]): Explanation for the identified categories - <code>model_version</code> (str): Schema version for backward compatibility (inherited from BaseResponse) - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing (inherited from BaseResponse)</p> <p>Example:</p> <pre><code>{\n    \"categories\": [\"Technical\", \"Organizational\", \"Financial\", \"Legal\"],\n    \"rationale\": \"These categories cover the main risk areas for a CRM implementation project.\",\n    \"model_version\": \"1.0\",\n    \"response_info\": {\n        \"consumed_tokens\": 1250,\n        \"total_cost\": 0.025,\n        \"prompt_name\": \"risk_categories\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_category/#correlationtagrequest","title":"CorrelationTagRequest","text":"<pre><code>class CorrelationTagRequest(BaseModel):\n    business_context: BusinessContext\n    risk_titles: List[str]\n    known_drivers: Optional[List[str]] = None\n</code></pre> <p>Input model for defining correlation tags.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>risk_titles</code> (List[str]): List of risk titles to analyze for correlation - <code>known_drivers</code> (Optional[List[str]]): List of known drivers to consider</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"risk_titles\": [\n        \"Data Migration Failure\",\n        \"User Adoption Issues\",\n        \"Integration Problems\",\n    ],\n    \"known_drivers\": [\n        \"Inadequate testing\",\n        \"Resistance to change\",\n        \"Technical complexity\",\n    ],\n}\n</code></pre>"},{"location":"schemas_category/#correlationtagresponse","title":"CorrelationTagResponse","text":"<pre><code>class CorrelationTagResponse(BaseModel):\n    tags: List[str]\n    rationale: Optional[str] = None\n    response_info: Optional[ResponseInfo] = None\n</code></pre> <p>Output model for correlation tags.</p> <p>Fields: - <code>tags</code> (List[str]): List of correlation tags - <code>rationale</code> (Optional[str]): Explanation for the identified tags - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p> <p>Example:</p> <pre><code>{\n    \"tags\": [\n        \"technical_complexity\",\n        \"change_management\",\n        \"data_quality\",\n    ],\n    \"rationale\": \"These tags represent common factors that could affect multiple risks in the project.\",\n    \"response_info\": {\n        \"consumed_tokens\": 1100,\n        \"total_cost\": 0.022,\n        \"prompt_name\": \"correlation_tags\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_category/#usage","title":"Usage","text":"<p>These models are used in the category identification and correlation tag chains to organize risks and identify common factors.</p>"},{"location":"schemas_category/#category-identification","title":"Category Identification","text":"<pre><code>from src import BusinessContext, CategoryRequest\nfrom src import get_categories_chain\n\n# Create a request\nrequest = CategoryRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    existing_categories=[\"Technical\", \"Organizational\"],\n)\n\n# Run the chain\nresponse = get_categories_chain(request)\n\n# Access the results\nprint(\"Risk Categories:\")\nfor category in response.categories:\n    print(f\"- {category}\")\nif response.rationale:\n    print(f\"\\nRationale: {response.rationale}\")\n</code></pre>"},{"location":"schemas_category/#correlation-tag-identification","title":"Correlation Tag Identification","text":"<pre><code>from src import BusinessContext, CorrelationTagRequest\nfrom src import get_correlation_tags_chain\n\n# Create a request\nrequest = CorrelationTagRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    risk_titles=[\n        \"Data Migration Failure\",\n        \"User Adoption Issues\",\n        \"Integration Problems\",\n    ],\n    known_drivers=[\n        \"Inadequate testing\",\n        \"Resistance to change\",\n        \"Technical complexity\",\n    ],\n)\n\n# Run the chain\nresponse = get_correlation_tags_chain(request)\n\n# Access the results\nprint(\"Correlation Tags:\")\nfor tag in response.tags:\n    print(f\"- {tag}\")\nif response.rationale:\n    print(f\"\\nRationale: {response.rationale}\")\n</code></pre>"},{"location":"schemas_category/#categories-in-risk-workflow","title":"Categories in Risk Workflow","text":"<p>The category models are used in the risk workflow to identify risks for specific categories:</p> <pre><code>from src import BusinessContext, RiskRequest\nfrom src import risk_workflow\n\n# First identify categories\nfrom src import get_categories_chain\n\ncategory_request = CategoryRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n)\ncategory_response = get_categories_chain(category_request)\n\n# Then identify risks for each category\nfor category in category_response.categories:\n    risk_request = RiskRequest(\n        business_context=category_request.business_context,\n        category=category,\n        max_risks=5,\n    )\n    risk_response = risk_workflow(risk_request)\n\n    print(f\"\\nRisks for category '{category}':\")\n    for risk in risk_response.risks:\n        print(f\"- {risk.title}\")\n</code></pre>"},{"location":"schemas_context_quality/","title":"Context Quality Schema Models","text":"<p>This page documents the schema models related to context quality evaluation in the RiskGPT application.</p>"},{"location":"schemas_context_quality/#overview","title":"Overview","text":"<p>The context quality schema models define the structure for evaluating the quality of the provided project context knowledge. These models are used in the check_context_quality workflow.</p>"},{"location":"schemas_context_quality/#models","title":"Models","text":""},{"location":"schemas_context_quality/#contextqualityrequest","title":"ContextQualityRequest","text":"<pre><code>class ContextQualityRequest(BaseModel):\n    business_context: BusinessContext\n    project_type: Optional[str] = None\n</code></pre> <p>Input model for evaluating context knowledge.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>project_type</code> (Optional[str]): Type of project for more specific evaluation</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"domain_knowledge\": \"The company operates in the B2B sector\",\n        \"language\": \"en\",\n    },\n    \"project_type\": \"IT Implementation\",\n}\n</code></pre>"},{"location":"schemas_context_quality/#contextqualityresponse","title":"ContextQualityResponse","text":"<pre><code>class ContextQualityResponse(BaseModel):\n    shortcomings: List[str]\n    rationale: str\n    suggested_improvements: str\n    response_info: Optional[ResponseInfo] = None\n</code></pre> <p>Output model describing context quality.</p> <p>Fields: - <code>shortcomings</code> (List[str]): List of identified shortcomings in the context - <code>rationale</code> (str): Explanation for the identified shortcomings - <code>suggested_improvements</code> (str): Suggestions for improving the context - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p> <p>Example:</p> <pre><code>{\n    \"shortcomings\": [\n        \"Missing information about existing systems\",\n        \"No details about user base and their technical proficiency\",\n        \"Lack of timeline and budget constraints\",\n        \"No mention of regulatory requirements\",\n    ],\n    \"rationale\": \"The provided context lacks critical information needed for a comprehensive risk assessment of a CRM implementation project. Information about existing systems is essential for identifying integration risks, while understanding the user base helps assess adoption risks.\",\n    \"suggested_improvements\": \"Enhance the context by adding details about existing systems that will integrate with the new CRM, describe the user base and their technical proficiency, specify timeline and budget constraints, and outline any regulatory requirements that may impact the implementation.\",\n    \"response_info\": {\n        \"consumed_tokens\": 1150,\n        \"total_cost\": 0.023,\n        \"prompt_name\": \"check_context_quality\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_context_quality/#usage","title":"Usage","text":"<p>These models are used in the check_context_quality workflow to evaluate the quality of the provided project context knowledge and suggest improvements.</p>"},{"location":"schemas_context_quality/#context-quality-check","title":"Context Quality Check","text":"<pre><code>from src import BusinessContext, ContextQualityRequest\nfrom src import check_context_quality\n\n# Create a request\nrequest = ContextQualityRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    project_type=\"IT Implementation\",\n)\n\n# Run the workflow\nresponse = check_context_quality(request)\n\n# Access the results\nprint(\"Context Quality Evaluation:\")\nprint(\"\\nShortcomings:\")\nfor shortcoming in response.shortcomings:\n    print(f\"- {shortcoming}\")\n\nprint(f\"\\nRationale: {response.rationale}\")\nprint(f\"\\nSuggested Improvements: {response.suggested_improvements}\")\n</code></pre>"},{"location":"schemas_context_quality/#improving-context-before-risk-analysis","title":"Improving Context Before Risk Analysis","text":"<p>The context quality check can be used to improve the business context before performing risk analysis:</p> <pre><code>from src import BusinessContext, ContextQualityRequest, RiskRequest\nfrom src import check_context_quality, risk_workflow\n\n# First, check the context quality\ninitial_context = BusinessContext(\n    project_id=\"PRJ-2023-001\",\n    project_description=\"Implementation of a new CRM system\",\n    domain_knowledge=\"The company operates in the B2B sector\",\n)\n\nquality_request = ContextQualityRequest(\n    business_context=initial_context,\n    project_type=\"IT Implementation\",\n)\nquality_response = check_context_quality(quality_request)\n\n# Display the suggested improvements\nprint(\"Suggested Improvements:\")\nprint(quality_response.suggested_improvements)\n\n# Enhance the context based on the suggestions\n# (In a real application, this would involve user input)\nenhanced_context = BusinessContext(\n    project_id=initial_context.project_id,\n    project_description=initial_context.project_description,\n    domain_knowledge=f\"{initial_context.domain_knowledge}. The system will integrate with existing ERP and billing systems. Users have varying levels of technical proficiency. The project has a 6-month timeline and a budget of $500,000. The company must comply with GDPR and industry-specific regulations.\",\n)\n\n# Now perform risk analysis with the enhanced context\nrisk_request = RiskRequest(\n    business_context=enhanced_context,\n    category=\"Technical\",\n)\nrisk_response = risk_workflow(risk_request)\n\n# The risk analysis will now be more comprehensive due to the improved context\n</code></pre>"},{"location":"schemas_context_quality/#integration-with-other-workflows","title":"Integration with Other Workflows","text":"<p>The context quality check can be integrated with other workflows to ensure high-quality input:</p> <pre><code>from src import BusinessContext, ContextQualityRequest, PresentationRequest, AudienceEnum\nfrom src import check_context_quality, prepare_presentation_output\n\n# Check context quality first\ncontext = BusinessContext(\n    project_id=\"PRJ-2023-001\",\n    project_description=\"Implementation of a new CRM system\",\n    domain_knowledge=\"The company operates in the B2B sector\",\n)\n\nquality_request = ContextQualityRequest(\n    business_context=context,\n)\nquality_response = check_context_quality(quality_request)\n\n# If there are significant shortcomings, enhance the context\nif len(quality_response.shortcomings) &gt; 2:\n    print(\"Please enhance the context with the following improvements:\")\n    print(quality_response.suggested_improvements)\n    # In a real application, get user input to enhance the context\n    # For this example, we'll proceed with the original context\n\n# Proceed with the presentation workflow\npresentation_request = PresentationRequest(\n    business_context=context,\n    audience=AudienceEnum.executive,\n)\npresentation_response = prepare_presentation_output(presentation_request)\n</code></pre>"},{"location":"schemas_driver/","title":"Driver Schema Models","text":"<p>This page documents the schema models related to risk drivers in the RiskGPT application.</p>"},{"location":"schemas_driver/#overview","title":"Overview","text":"<p>The driver schema models define the structure for risk driver identification requests and responses. Risk drivers are factors that contribute to or influence the likelihood or impact of a risk.</p>"},{"location":"schemas_driver/#models","title":"Models","text":""},{"location":"schemas_driver/#driverrequest","title":"DriverRequest","text":"<pre><code>class DriverRequest(BaseModel):\n    business_context: BusinessContext = Field(\n        description=\"Business context information\"\n    )\n    risk_description: str = Field(\n        description=\"Risk description to identify drivers for\"\n    )\n</code></pre> <p>Input model for risk driver identification.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>risk_description</code> (str): Risk description to identify drivers for</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"risk_description\": \"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n}\n</code></pre>"},{"location":"schemas_driver/#driverresponse","title":"DriverResponse","text":"<pre><code>class DriverResponse(BaseResponse):\n    drivers: List[str] = Field(description=\"List of identified risk drivers\")\n    references: Optional[List[str]] = Field(\n        default=None, description=\"References used for driver identification\"\n    )\n</code></pre> <p>Output model containing risk drivers.</p> <p>Fields: - <code>drivers</code> (List[str]): List of identified risk drivers - <code>references</code> (Optional[List[str]]): References used for driver identification - <code>model_version</code> (str): Schema version for backward compatibility (inherited from BaseResponse) - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing (inherited from BaseResponse)</p> <p>Example:</p> <pre><code>{\n    \"drivers\": [\n        \"Inadequate testing before deployment\",\n        \"Incompatibility with existing systems\",\n        \"Poor data quality in source systems\",\n    ],\n    \"references\": [\n        \"Industry report on CRM implementations\",\n        \"Internal lessons learned\",\n    ],\n    \"model_version\": \"1.0\",\n    \"response_info\": {\n        \"consumed_tokens\": 1300,\n        \"total_cost\": 0.026,\n        \"prompt_name\": \"risk_drivers\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_driver/#mitigationrequest","title":"MitigationRequest","text":"<pre><code>class MitigationRequest(BaseModel):\n    business_context: BusinessContext\n    risk_description: str\n    drivers: Optional[List[str]] = None\n</code></pre> <p>Input model for risk mitigation measures.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>risk_description</code> (str): Risk description to identify mitigation measures for - <code>drivers</code> (Optional[List[str]]): List of risk drivers to consider for mitigation</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"risk_description\": \"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n    \"drivers\": [\n        \"Inadequate testing before deployment\",\n        \"Incompatibility with existing systems\",\n        \"Poor data quality in source systems\",\n    ],\n}\n</code></pre>"},{"location":"schemas_driver/#mitigationresponse","title":"MitigationResponse","text":"<pre><code>class MitigationResponse(BaseModel):\n    mitigations: List[str]\n    references: Optional[List[str]] = None\n    response_info: Optional[ResponseInfo] = None\n</code></pre> <p>Output model containing mitigation measures.</p> <p>Fields: - <code>mitigations</code> (List[str]): List of mitigation measures - <code>references</code> (Optional[List[str]]): References used for mitigation identification - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p> <p>Example:</p> <pre><code>{\n    \"mitigations\": [\n        \"Implement comprehensive testing plan including unit, integration, and user acceptance testing\",\n        \"Conduct thorough compatibility assessment with existing systems before deployment\",\n        \"Perform data quality assessment and cleansing of source data before migration\",\n    ],\n    \"references\": [\n        \"Industry best practices for CRM implementations\",\n        \"Internal testing guidelines\",\n    ],\n    \"response_info\": {\n        \"consumed_tokens\": 1350,\n        \"total_cost\": 0.027,\n        \"prompt_name\": \"risk_mitigations\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_driver/#usage","title":"Usage","text":"<p>These models are used in the driver identification and mitigation chains to identify factors that contribute to risks and suggest mitigation measures.</p>"},{"location":"schemas_driver/#driver-identification","title":"Driver Identification","text":"<pre><code>from src import BusinessContext, DriverRequest\nfrom src import get_drivers_chain\n\n# Create a request\nrequest = DriverRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    risk_description=\"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n)\n\n# Run the chain\nresponse = get_drivers_chain(request)\n\n# Access the results\nprint(\"Risk Drivers:\")\nfor driver in response.drivers:\n    print(f\"- {driver}\")\n</code></pre>"},{"location":"schemas_driver/#mitigation-identification","title":"Mitigation Identification","text":"<pre><code>from src import BusinessContext, MitigationRequest\nfrom src import get_mitigations_chain\n\n# Create a request\nrequest = MitigationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    risk_description=\"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n    drivers=[\n        \"Inadequate testing before deployment\",\n        \"Incompatibility with existing systems\",\n        \"Poor data quality in source systems\",\n    ],\n)\n\n# Run the chain\nresponse = get_mitigations_chain(request)\n\n# Access the results\nprint(\"Mitigation Measures:\")\nfor mitigation in response.mitigations:\n    print(f\"- {mitigation}\")\n</code></pre>"},{"location":"schemas_driver/#drivers-in-presentation-workflow","title":"Drivers in Presentation Workflow","text":"<p>The driver models are also used in the prepare_presentation_output workflow:</p> <pre><code>from src import BusinessContext, PresentationRequest, AudienceEnum\nfrom src import prepare_presentation_output\n\n# Create a request\nrequest = PresentationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    audience=AudienceEnum.executive,\n    focus_areas=[\"Technical\"],\n)\n\n# Run the workflow\nresponse = prepare_presentation_output(request)\n\n# Access the drivers in the response\nprint(\"Key Drivers:\")\nfor driver in response.key_drivers:\n    print(f\"- {driver}\")\n</code></pre>"},{"location":"schemas_external_context/","title":"External Context Schema Models","text":"<p>This page documents the schema models related to external context enrichment in the RiskGPT application.</p>"},{"location":"schemas_external_context/#overview","title":"Overview","text":"<p>The external context schema models define the structure for collecting and summarizing external information about a project or sector. These models are used in the external_context_enrichment workflow.</p>"},{"location":"schemas_external_context/#models","title":"Models","text":""},{"location":"schemas_external_context/#sourceentry","title":"SourceEntry","text":"<pre><code>class SourceEntry(BaseModel):\n    title: str\n    url: str\n    date: Optional[str] = None\n    type: Optional[str] = None\n    comment: Optional[str] = None\n</code></pre> <p>Structured reference to an external source.</p> <p>Fields: - <code>title</code> (str): Title of the source - <code>url</code> (str): URL of the source - <code>date</code> (Optional[str]): Date of the source - <code>type</code> (Optional[str]): Type of the source (e.g., news, blog, academic) - <code>comment</code> (Optional[str]): Additional comment about the source</p> <p>Example:</p> <pre><code>{\n    \"title\": \"CRM Implementation Challenges in Financial Services\",\n    \"url\": \"https://example.com/crm-challenges\",\n    \"date\": \"2023-05-15\",\n    \"type\": \"industry_report\",\n    \"comment\": \"Contains relevant case studies\",\n}\n</code></pre>"},{"location":"schemas_external_context/#externalcontextrequest","title":"ExternalContextRequest","text":"<pre><code>class ExternalContextRequest(BaseModel):\n    business_context: BusinessContext\n    focus_keywords: Optional[List[str]] = None\n    time_horizon_months: Optional[int] = 12\n</code></pre> <p>Input model for external context enrichment.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>focus_keywords</code> (Optional[List[str]]): Specific keywords to focus on - <code>time_horizon_months</code> (Optional[int]): Time horizon in months (default: 12)</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system in a financial services company\",\n        \"language\": \"en\",\n    },\n    \"focus_keywords\": [\"cybersecurity\", \"data privacy\", \"compliance\"],\n    \"time_horizon_months\": 6,\n}\n</code></pre>"},{"location":"schemas_external_context/#externalcontextresponse","title":"ExternalContextResponse","text":"<pre><code>class ExternalContextResponse(BaseModel):\n    sector_summary: str\n    external_risks: List[str]\n    source_table: List[Dict[str, str]]\n    workshop_recommendations: List[str]\n    full_report: Optional[str] = None\n    response_info: Optional[ResponseInfo] = None\n</code></pre> <p>Output model containing summarised external information.</p> <p>Fields: - <code>sector_summary</code> (str): Short overview of relevant developments - <code>external_risks</code> (List[str]): Bullet point risks or drivers - <code>source_table</code> (List[Dict[str, str]]): Table of sources with title, url, date, type, and comment - <code>workshop_recommendations</code> (List[str]): Suggestions for the workshop - <code>full_report</code> (Optional[str]): Optional long-form text - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p> <p>Example:</p> <pre><code>{\n    \"sector_summary\": \"The financial services sector has seen increased regulatory scrutiny around CRM implementations in the past 6 months, with a focus on data privacy and security.\",\n    \"external_risks\": [\n        \"Potential issue: New GDPR compliance requirements for CRM systems\",\n        \"Potential issue: Recent data breach at competitor using similar CRM system\",\n        \"Potential issue: Industry-wide shortage of experienced CRM implementation specialists\",\n    ],\n    \"source_table\": [\n        {\n            \"title\": \"New GDPR Requirements for Financial CRM Systems\",\n            \"url\": \"https://example.com/gdpr-crm\",\n            \"date\": \"2023-04-10\",\n            \"type\": \"regulatory_update\",\n            \"comment\": \"Directly applicable to our implementation\",\n        },\n        {\n            \"title\": \"Major Data Breach at FinCorp CRM System\",\n            \"url\": \"https://example.com/fincorp-breach\",\n            \"date\": \"2023-03-22\",\n            \"type\": \"news\",\n            \"comment\": \"Similar system architecture to our planned implementation\",\n        },\n    ],\n    \"workshop_recommendations\": [\n        \"Review source: New GDPR Requirements for Financial CRM Systems\",\n        \"Review source: Major Data Breach at FinCorp CRM System\",\n    ],\n    \"response_info\": {\n        \"consumed_tokens\": 0,\n        \"total_cost\": 0.0,\n        \"prompt_name\": \"external_context_enrichment\",\n        \"model_name\": \"\",\n    },\n}\n</code></pre>"},{"location":"schemas_external_context/#usage","title":"Usage","text":"<p>These models are used in the external_context_enrichment workflow to collect and summarize external information about a project or sector.</p>"},{"location":"schemas_external_context/#external-context-enrichment","title":"External Context Enrichment","text":"<pre><code>from src import BusinessContext, ExternalContextRequest\nfrom src import enrich_context\n\n# Create a request\nrequest = ExternalContextRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system in a financial services company\",\n        domain_knowledge=\"The company is subject to strict regulatory requirements\",\n    ),\n    focus_keywords=[\"cybersecurity\", \"data privacy\", \"compliance\"],\n    time_horizon_months=6,\n)\n\n# Run the workflow\nresponse = external_context_enrichment(request)\n\n# Access the results\nprint(f\"Sector Summary: {response.sector_summary}\")\n\nprint(\"\\nExternal Risks:\")\nfor risk in response.external_risks:\n    print(f\"- {risk}\")\n\nprint(\"\\nSources:\")\nfor source in response.source_table:\n    print(f\"- {source['title']} ({source['url']})\")\n    if 'date' in source and source['date']:\n        print(f\"  Date: {source['date']}\")\n    if 'type' in source and source['type']:\n        print(f\"  Type: {source['type']}\")\n    if 'comment' in source and source['comment']:\n        print(f\"  Comment: {source['comment']}\")\n\nprint(\"\\nWorkshop Recommendations:\")\nfor recommendation in response.workshop_recommendations:\n    print(f\"- {recommendation}\")\n</code></pre>"},{"location":"schemas_external_context/#search-configuration","title":"Search Configuration","text":"<p>The external context enrichment workflow relies on search providers that can be configured using environment variables:</p> <pre><code># Example .env file configuration\nSEARCH_PROVIDER=duckduckgo  # Options: duckduckgo, google, wikipedia\nINCLUDE_WIKIPEDIA=true  # Whether to include Wikipedia results\nGOOGLE_CSE_ID=your_cse_id  # Required for Google search\nGOOGLE_API_KEY=your_api_key  # Required for Google search\n</code></pre> <p>The workflow performs searches in different categories: - News search: For recent news articles - Professional search: For professional content (LinkedIn) - Regulatory search: For regulatory information - Peer search: For competitor incidents</p>"},{"location":"schemas_external_context/#integration-with-risk-workflow","title":"Integration with Risk Workflow","text":"<p>The external context information can be used to enhance the risk workflow:</p> <pre><code>from src import BusinessContext, ExternalContextRequest, RiskRequest\nfrom src import enrich_context, risk_workflow\n\n# First, get external context\ncontext_request = ExternalContextRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system in a financial services company\",\n    ),\n    focus_keywords=[\"cybersecurity\", \"data privacy\"],\n)\ncontext_response = external_context_enrichment(context_request)\n\n# Extract key insights from external context\nexternal_insights = context_response.sector_summary\nif context_response.external_risks:\n    external_insights += \"\\n\\nExternal risks:\\n\" + \"\\n\".join(context_response.external_risks)\n\n# Use the insights in the risk workflow\nrisk_request = RiskRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system in a financial services company\",\n        domain_knowledge=f\"The company is subject to strict regulatory requirements. {external_insights}\",\n    ),\n    category=\"Technical\",\n)\nrisk_response = risk_workflow(risk_request)\n</code></pre>"},{"location":"schemas_presentation/","title":"Presentation Schema Models","text":"<p>This page documents the schema models related to presentation output in the RiskGPT application.</p>"},{"location":"schemas_presentation/#overview","title":"Overview","text":"<p>The presentation schema models define the structure for creating presentation-ready summaries tailored to different audiences. These models are used in the prepare_presentation_output workflow.</p>"},{"location":"schemas_presentation/#models","title":"Models","text":""},{"location":"schemas_presentation/#audienceenum","title":"AudienceEnum","text":"<pre><code>class AudienceEnum(str, Enum):\n    executive = \"executive\"\n    workshop = \"workshop\"\n    risk_internal = \"risk_internal\"\n    audit = \"audit\"\n    regulator = \"regulator\"\n    project_owner = \"project_owner\"\n    investor = \"investor\"\n    operations = \"operations\"\n</code></pre> <p>Supported audiences for presentation output.</p> <p>Values: - <code>executive</code>: For executive leadership - <code>workshop</code>: For risk workshop participants - <code>risk_internal</code>: For internal risk management teams - <code>audit</code>: For audit teams - <code>regulator</code>: For regulatory bodies - <code>project_owner</code>: For project owners and managers - <code>investor</code>: For investors and stakeholders - <code>operations</code>: For operations teams</p>"},{"location":"schemas_presentation/#presentationrequest","title":"PresentationRequest","text":"<pre><code>class PresentationRequest(BaseModel):\n    business_context: BusinessContext\n    audience: AudienceEnum\n    focus_areas: Optional[List[str]] = None\n</code></pre> <p>Input model for presentation-oriented summaries.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>audience</code> (AudienceEnum): Target audience for the presentation - <code>focus_areas</code> (Optional[List[str]]): Specific areas to focus on</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"audience\": \"executive\",\n    \"focus_areas\": [\"Technical\", \"Organizational\"],\n}\n</code></pre>"},{"location":"schemas_presentation/#presentationresponse","title":"PresentationResponse","text":"<pre><code>class PresentationResponse(BaseModel):\n    executive_summary: str\n    main_risks: List[str]\n    quantitative_summary: Optional[str] = None\n    key_drivers: Optional[List[str]] = None\n    correlation_tags: Optional[List[str]] = None\n    mitigations: Optional[List[str]] = None\n    open_questions: Optional[List[str]] = None\n    chart_placeholders: Optional[List[str]] = None\n    appendix: Optional[str] = None\n    response_info: Optional[ResponseInfo] = None\n</code></pre> <p>Structured output for presentation-ready summaries.</p> <p>Fields: - <code>executive_summary</code> (str): High-level summary for executives - <code>main_risks</code> (List[str]): List of main risks identified - <code>quantitative_summary</code> (Optional[str]): Quantitative assessment summary - <code>key_drivers</code> (Optional[List[str]]): List of key risk drivers - <code>correlation_tags</code> (Optional[List[str]]): Tags for correlation analysis - <code>mitigations</code> (Optional[List[str]]): List of mitigation measures - <code>open_questions</code> (Optional[List[str]]): Questions for discussion - <code>chart_placeholders</code> (Optional[List[str]]): Placeholders for charts - <code>appendix</code> (Optional[str]): Additional information - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p> <p>Example:</p> <pre><code>{\n    \"executive_summary\": \"The CRM implementation project faces several significant risks that require attention. The most critical risks are related to data migration, user adoption, and system integration.\",\n    \"main_risks\": [\n        \"Data Migration Failure\",\n        \"User Adoption Issues\",\n        \"Integration Problems\",\n    ],\n    \"quantitative_summary\": \"Data Migration Failure: P=0.3, I=0.7\\nUser Adoption Issues: P=0.5, I=0.4\\nIntegration Problems: P=0.2, I=0.6\",\n    \"key_drivers\": [\n        \"Inadequate testing\",\n        \"Resistance to change\",\n        \"Technical complexity\",\n    ],\n    \"correlation_tags\": [\n        \"technical_complexity\",\n        \"change_management\",\n        \"data_quality\",\n    ],\n    \"mitigations\": [\n        \"Implement comprehensive testing plan\",\n        \"Develop change management strategy\",\n        \"Conduct data quality assessment\",\n    ],\n    \"open_questions\": [\n        \"What is the timeline for user training?\",\n        \"Has a data backup strategy been established?\",\n    ],\n    \"chart_placeholders\": [\n        \"risk_overview_chart\",\n    ],\n    \"appendix\": \"Technical details of risk assessment methodology\",\n    \"response_info\": {\n        \"consumed_tokens\": 2500,\n        \"total_cost\": 0.05,\n        \"prompt_name\": \"prepare_presentation_output\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_presentation/#communicationrequest","title":"CommunicationRequest","text":"<pre><code>class CommunicationRequest(BaseModel):\n    business_context: BusinessContext\n    summary: str\n</code></pre> <p>Input for summarising risks for stakeholders.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>summary</code> (str): Risk summary to communicate</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"summary\": \"Data Migration Failure: P=0.3, I=0.7\\nUser Adoption Issues: P=0.5, I=0.4\\nIntegration Problems: P=0.2, I=0.6\",\n}\n</code></pre>"},{"location":"schemas_presentation/#communicationresponse","title":"CommunicationResponse","text":"<pre><code>class CommunicationResponse(BaseModel):\n    executive_summary: str\n    technical_annex: Optional[str] = None\n    response_info: Optional[ResponseInfo] = None\n</code></pre> <p>Output model for risk communication.</p> <p>Fields: - <code>executive_summary</code> (str): High-level summary for executives - <code>technical_annex</code> (Optional[str]): Technical details for specialists - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing</p> <p>Example:</p> <pre><code>{\n    \"executive_summary\": \"The CRM implementation project faces several significant risks that require attention. The most critical risks are related to data migration, user adoption, and system integration.\",\n    \"technical_annex\": \"Detailed risk assessment results:\\n- Data Migration Failure: Probability 30%, Impact 70%\\n- User Adoption Issues: Probability 50%, Impact 40%\\n- Integration Problems: Probability 20%, Impact 60%\",\n    \"response_info\": {\n        \"consumed_tokens\": 1200,\n        \"total_cost\": 0.024,\n        \"prompt_name\": \"communicate_risks\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_presentation/#usage","title":"Usage","text":"<p>These models are used in the prepare_presentation_output workflow to create presentation-ready summaries tailored to different audiences.</p>"},{"location":"schemas_presentation/#presentation-output","title":"Presentation Output","text":"<pre><code>from src import BusinessContext, PresentationRequest, AudienceEnum\nfrom src import prepare_presentation_output\n\n# Create a request\nrequest = PresentationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    audience=AudienceEnum.executive,\n    focus_areas=[\"Technical\"],\n)\n\n# Run the workflow\nresponse = prepare_presentation_output(request)\n\n# Access the results\nprint(f\"Executive Summary: {response.executive_summary}\")\nprint(\"\\nMain Risks:\")\nfor risk in response.main_risks:\n    print(f\"- {risk}\")\n\nif response.key_drivers:\n    print(\"\\nKey Drivers:\")\n    for driver in response.key_drivers:\n        print(f\"- {driver}\")\n\nif response.mitigations:\n    print(\"\\nMitigations:\")\n    for mitigation in response.mitigations:\n        print(f\"- {mitigation}\")\n</code></pre>"},{"location":"schemas_presentation/#different-audiences","title":"Different Audiences","text":"<p>The output is automatically adjusted based on the target audience:</p> <pre><code># For executive audience\nexecutive_request = PresentationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n    ),\n    audience=AudienceEnum.executive,\n)\nexecutive_response = prepare_presentation_output(executive_request)\n# Executive output has top 3 risks, executive overview chart, no open questions\n\n# For workshop audience\nworkshop_request = PresentationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n    ),\n    audience=AudienceEnum.workshop,\n)\nworkshop_response = prepare_presentation_output(workshop_request)\n# Workshop output includes open questions for discussion\n\n# For risk internal audience\nrisk_internal_request = PresentationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n    ),\n    audience=AudienceEnum.risk_internal,\n)\nrisk_internal_response = prepare_presentation_output(risk_internal_request)\n# Risk internal output includes model parameters in appendix\n</code></pre>"},{"location":"schemas_presentation/#risk-communication","title":"Risk Communication","text":"<p>The communication models can be used directly:</p> <pre><code>from src import BusinessContext, CommunicationRequest\nfrom src import communicate_risks_chain\n\n# Create a request\nrequest = CommunicationRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n    ),\n    summary=\"Data Migration Failure: P=0.3, I=0.7\\nUser Adoption Issues: P=0.5, I=0.4\\nIntegration Problems: P=0.2, I=0.6\",\n)\n\n# Run the chain\nresponse = communicate_risks_chain(request)\n\n# Access the results\nprint(f\"Executive Summary: {response.executive_summary}\")\nif response.technical_annex:\n    print(f\"\\nTechnical Annex: {response.technical_annex}\")\n</code></pre>"},{"location":"schemas_risk/","title":"Risk Schema Models","text":"<p>This page documents the schema models related to risk identification and management in the RiskGPT application.</p>"},{"location":"schemas_risk/#overview","title":"Overview","text":"<p>The risk schema models define the structure for risk identification requests and responses. They are used in the risk workflow and related chains.</p>"},{"location":"schemas_risk/#models","title":"Models","text":""},{"location":"schemas_risk/#risk","title":"Risk","text":"<pre><code>class Risk(BaseModel):\n    title: str = Field(description=\"Short title of the risk\")\n    description: str = Field(description=\"Detailed description of the risk\")\n    category: str = Field(description=\"Category the risk belongs to\")\n    document_refs: Optional[List[str]] = Field(\n        default=None,\n        description=\"References to document UUIDs from the document microservice\",\n    )\n</code></pre> <p>Representation of a single risk.</p> <p>Fields: - <code>title</code> (str): Short title of the risk - <code>description</code> (str): Detailed description of the risk - <code>category</code> (str): Category the risk belongs to - <code>document_refs</code> (Optional[List[str]]): References to document UUIDs from the document microservice</p> <p>Example:</p> <pre><code>{\n    \"title\": \"Data Migration Failure\",\n    \"description\": \"Risk of losing critical customer data during migration to the new CRM system\",\n    \"category\": \"Technical\"\n}\n</code></pre>"},{"location":"schemas_risk/#riskrequest","title":"RiskRequest","text":"<pre><code>class RiskRequest(BaseModel):\n    business_context: BusinessContext = Field(\n        description=\"Business context information\"\n    )\n    category: str = Field(description=\"Risk category to identify risks for\")\n    max_risks: Optional[int] = Field(\n        default=5, description=\"Maximum number of risks to identify\", ge=1, le=20\n    )\n    existing_risks: Optional[List[str]] = Field(\n        default=None, description=\"List of existing risks to consider\"\n    )\n    document_refs: Optional[List[str]] = Field(\n        default=None,\n        description=\"References to document UUIDs from the document microservice\",\n    )\n</code></pre> <p>Input model for risk identification.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>category</code> (str): Risk category to identify risks for - <code>max_risks</code> (Optional[int]): Maximum number of risks to identify (between 1 and 20, default 5) - <code>existing_risks</code> (Optional[List[str]]): List of existing risks to consider - <code>document_refs</code> (Optional[List[str]]): References to document UUIDs from the document microservice</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"category\": \"Technical\",\n    \"max_risks\": 5,\n    \"existing_risks\": [\"Data migration failure\"],\n}\n</code></pre>"},{"location":"schemas_risk/#riskresponse","title":"RiskResponse","text":"<pre><code>class RiskResponse(BaseResponse):\n    risks: List[Risk] = Field(description=\"List of identified risks\")\n    references: Optional[List[str]] = Field(\n        default=None, description=\"References used for risk identification\"\n    )\n    document_refs: Optional[List[str]] = Field(\n        default=None,\n        description=\"References to document UUIDs from the document microservice\",\n    )\n</code></pre> <p>Output model for identified risks.</p> <p>Fields: - <code>risks</code> (List[Risk]): List of identified risks - <code>references</code> (Optional[List[str]]): References used for risk identification - <code>document_refs</code> (Optional[List[str]]): References to document UUIDs from the document microservice - <code>model_version</code> (str): Schema version for backward compatibility (inherited from BaseResponse) - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing (inherited from BaseResponse)</p> <p>Example:</p> <pre><code>{\n    \"risks\": [\n        {\n            \"title\": \"Data Migration Failure\",\n            \"description\": \"Risk of losing critical customer data during migration to the new CRM system\",\n            \"category\": \"Technical\",\n        },\n        {\n            \"title\": \"User Adoption Issues\",\n            \"description\": \"Risk of low user adoption due to resistance to change\",\n            \"category\": \"Organizational\",\n        },\n    ],\n    \"references\": [\n        \"Industry report on CRM implementations\",\n        \"Internal lessons learned\",\n    ],\n    \"model_version\": \"1.0\",\n    \"response_info\": {\n        \"consumed_tokens\": 1500,\n        \"total_cost\": 0.03,\n        \"prompt_name\": \"risk_identification\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_risk/#definitioncheckrequest","title":"DefinitionCheckRequest","text":"<pre><code>class DefinitionCheckRequest(BaseModel):\n    business_context: BusinessContext = Field(\n        description=\"Business context information\"\n    )\n    risk_description: str = Field(description=\"Risk description to check and revise\")\n</code></pre> <p>Input model for checking and revising a risk definition.</p> <p>Fields: - <code>business_context</code> (BusinessContext): Business context information - <code>risk_description</code> (str): Risk description to check and revise</p> <p>Example:</p> <pre><code>{\n    \"business_context\": {\n        \"project_id\": \"CRM-2023\",\n        \"project_description\": \"Implementation of a new CRM system\",\n        \"language\": \"en\",\n    },\n    \"risk_description\": \"The project may fail due to technical issues.\",\n}\n</code></pre>"},{"location":"schemas_risk/#definitioncheckresponse","title":"DefinitionCheckResponse","text":"<pre><code>class DefinitionCheckResponse(BaseResponse):\n    revised_description: str = Field(description=\"Revised risk description\")\n    biases: Optional[List[str]] = Field(\n        default=None, description=\"List of identified biases in the risk description\"\n    )\n    rationale: Optional[str] = Field(\n        default=None, description=\"Rationale for the revisions made\"\n    )\n</code></pre> <p>Output model for a revised risk definition.</p> <p>Fields: - <code>revised_description</code> (str): Revised risk description - <code>biases</code> (Optional[List[str]]): List of identified biases in the risk description - <code>rationale</code> (Optional[str]): Rationale for the revisions made - <code>model_version</code> (str): Schema version for backward compatibility (inherited from BaseResponse) - <code>response_info</code> (Optional[ResponseInfo]): Information about the response processing (inherited from BaseResponse)</p> <p>Example:</p> <pre><code>{\n    \"revised_description\": \"There is a 30% probability that the CRM implementation will experience critical technical failures within the first 3 months of deployment.\",\n    \"biases\": [\"ambiguous wording\", \"missing quantifiers\"],\n    \"rationale\": \"The original description was too vague and lacked specific quantifiers.\",\n    \"model_version\": \"1.0\",\n    \"response_info\": {\n        \"consumed_tokens\": 1200,\n        \"total_cost\": 0.024,\n        \"prompt_name\": \"check_definition\",\n        \"model_name\": \"gpt-4\",\n    },\n}\n</code></pre>"},{"location":"schemas_risk/#usage","title":"Usage","text":"<p>These models are used in the risk workflow and related chains to identify and manage risks.</p>"},{"location":"schemas_risk/#risk-identification","title":"Risk Identification","text":"<pre><code>from src import BusinessContext, RiskRequest\nfrom src import risk_workflow\n\n# Create a request\nrequest = RiskRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n        domain_knowledge=\"The company operates in the B2B sector\",\n    ),\n    category=\"Technical\",\n    max_risks=5,\n)\n\n# Run the workflow\nresponse = risk_workflow(request)\n\n# Access the results\nfor risk in response.risks:\n    print(f\"Risk: {risk.title}\")\n    print(f\"Description: {risk.description}\")\n    print(f\"Category: {risk.category}\")\n    print(\"---\")\n</code></pre>"},{"location":"schemas_risk/#definition-check","title":"Definition Check","text":"<pre><code>from src import BusinessContext, DefinitionCheckRequest\nfrom src import check_definition_chain\n\n# Create a request\nrequest = DefinitionCheckRequest(\n    business_context=BusinessContext(\n        project_id=\"PRJ-2023-001\",\n        project_description=\"Implementation of a new CRM system\",\n    ),\n    risk_description=\"The project may fail due to technical issues.\",\n)\n\n# Run the chain\nresponse = check_definition_chain(request)\n\n# Access the results\nprint(f\"Original: {request.risk_description}\")\nprint(f\"Revised: {response.revised_description}\")\nif response.biases:\n    print(f\"Biases: {', '.join(response.biases)}\")\nif response.rationale:\n    print(f\"Rationale: {response.rationale}\")\n</code></pre>"},{"location":"design/audience_output/","title":"Audience Output Matrix","text":"<p>The following tables describe how <code>prepare_presentation_output</code> adapts the generated content for different target audiences.</p>"},{"location":"design/audience_output/#summary-table","title":"Summary Table","text":"Audience Main Focus Key Output Elements executive Decision making, overview Short summary, top risks, action options, concise chart workshop Discussion and challenge Detailed risks, scenarios, open questions"},{"location":"design/audience_output/#audience-output-matrix_1","title":"Audience Output Matrix","text":"Audience Purpose/Focus Output Characteristics Example Section Required/Optional executive Decision, overview Summary, key KPIs, action items Executive summary, traffic lights Required workshop Discussion, challenge Detailed, scenarios, open questions Risk register, open questions Required risk_internal Modelling, validation Parameters, assumptions, model logic Sensitivity analysis, validation Required audit Traceability, control Audit trail, controls, data lineage Data lineage, checkpoints Required regulator Compliance, method Regulatory mapping, method explanation Compliance section, framework map Optional project_owner Execution, schedule/cost impact Project-specific impact, deadlines Milestone table, risk actions Optional investor Value, risk-return Financial impact, scenario results Value-at-risk, scenario table Optional operations Controls, implementation KRIs, actionable alerts, trends Incident log, KRI dashboard Optional <p>Developers can extend this matrix by adding a new enum value to <code>AudienceEnum</code> and updating the helper function that formats the output.</p>"},{"location":"design/audience_output/#how-to-extend","title":"How-to Extend","text":"<ol> <li>Add a new value to <code>AudienceEnum</code> in <code>riskgpt.models.schemas</code>.</li> <li>Adjust <code>apply_audience_formatting</code> in <code>riskgpt.workflows.prepare_presentation_output</code> to handle the new audience.</li> <li>Document the expected output in this file and create a corresponding test.</li> </ol>"},{"location":"design/prepare_presentation_output/","title":"Prepare Presentation Output","text":"<p>The <code>prepare_presentation_output</code> workflow orchestrates existing chains with LangGraph to create a structured summary for slides or workshops. Output formatting differs per audience as described in Audience Output Matrix.</p>"},{"location":"design/prepare_presentation_output/#usage","title":"Usage","text":"<pre><code>from src import prepare_presentation_output\nfrom src import PresentationRequest, AudienceEnum\n\nreq = PresentationRequest(\n    project_id=\"p42\",\n    project_description=\"Introduce a new CRM system\",\n    audience=AudienceEnum.executive,\n    focus_areas=[\"Technical\"],\n)\nresult = prepare_presentation_output(req)\nprint(result.executive_summary)\n</code></pre>"},{"location":"design/prepare_presentation_output/#workflow","title":"Workflow","text":"<pre><code>flowchart TD\n    A[Identify Risks] --&gt; B[Assess Risks]\n    B --&gt; C[Identify Drivers]\n    C --&gt; D[Mitigations]\n    D --&gt; E[Correlation Tags]\n    E --&gt; F[Summary]\n</code></pre>"},{"location":"design/prepare_presentation_output/#example-output","title":"Example Output","text":"<pre><code>Executive summary: &lt;text&gt;\nMain risks: [\"Data loss\", \"Downtime\"]\nQuantitative summary: Data loss: P=0.1, I=10000\n...\n</code></pre>"}]}